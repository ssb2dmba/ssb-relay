name: Deploy debian repository

on:
  push:
    tags: ["*"]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install required packages
        run: |
          until sudo apt update
          do
            sleep 1
          done
          sudo apt install -y jq createrepo-c coreutils gnupg2 dpkg-dev git nodejs libsodium-dev dpkg fakeroot jq

      - name: Insert environment variables
        id: env_config
        run: |
          echo GNUPGHOME="$(mktemp -d /tmp/pgpkeys-XXXXXX)" >> $GITHUB_ENV
          echo REPO_OWNER="$(echo "${GITHUB_REPOSITORY}" | cut -d/ -f1)" >> $GITHUB_ENV
          echo REPO_NAME="$(echo "${GITHUB_REPOSITORY}" | cut -d/ -f2)" >> $GITHUB_ENV
          echo "TAG=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/tags/}}" >> $GITHUB_OUTPUT

      - name: Build Debian package
        run: |
          npm version ${{ steps.env_config.outputs.TAG }}
          git add package.json
          git commit -m v{{ steps.env_config.outputs.TAG }}
          git push origin main
          ./deb-install/make-pkg.sh ${{ steps.env_config.outputs.TAG }}  
                
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: deb-install/*.deb

      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.PRIVATE_KEY }}

      - name: Confirm GPG Key loaded
        run: |
          gpg --list-keys
          echo "${{ steps.import_gpg.outputs.fingerprint }}"

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Build Debian repository
        run: |
          export GPG_FINGERPRINT="${{ steps.import_gpg.outputs.fingerprint }}"
          export ORIGIN="${{ steps.import_gpg.outputs.name }}"
          .github/scripts/build_repos.sh      

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site

      - name: Set permissions on the _site directory
        run: sudo chown -R runner:docker _site          

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1

